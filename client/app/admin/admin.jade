div(ng-include='"components/navbar/navbar.html"')
.row
	.col.s12.m10
		#picture.section.scrollspy
			ul.collection.with-header
				li.collection-item
					.col-sm-12
						h4.thin Upload Header Picture
				li.collection-item
					form(name='documentUpload', ng-submit='uploadHeader()')
						.file-field.input-field
							.btn
								span Picture
								input(type="file", file-model="header.picture")
							.file-path-wrapper
								input(type="text", value="{{header.picture.name}}") 
						.input-field
							input#picCaption(type="text", ng-model="header.caption")
							label(for="picCaption") Caption
						br
						div
							button.btn.btn-inverse.btn-lg.btn-login(type='submit')
								| Upload Header Picture
		#news.section.scrollspy
			ul.collection.with-header
				li.collection-item
					.col-sm-12
						h4.thin Broadcast News
						br
					.col-sm-12
						form.form(name='newsForm', ng-submit='broadcast()')
							.input-field
								input#newsHeading(type="text", ng-model="news.heading", required)
								label(for="newsHeading") Heading
							.input-field
								input#newsDescroption(type="text", ng-model="news.description", required)
								label(for="newsDescription") Description
							.input-field
								input#newsHeading-es(type="text", ng-model="news.heading_es")
								label(for="newsHeading-es") Spanish Heading (optional)
							.input-field
								input#newsDescroption-es(type="text", ng-model="news.description_es")
								label(for="newsDescription-es") Spanish Description (optional)
							.input-field
								input#newsUrl(type="url", ng-model="news.url", required)
								label(for="newUrl") URL
							p
								input.with-gap(ng-model='news.privacy', type='radio', id='publicPriv', value="false", checked)
								label(for='publicPriv') Public
							p
								input.with-gap(ng-model='news.privacy', type='radio', id='privatePriv', value="true")
								label(for='privatePriv') Private
							div
								button.btn.btn-inverse.btn-lg.btn-login(type='submit')
									| Broadcast News
		#events.section.scrollspy
			ul.collection.with-header
				li.collection-item
					.col-sm-12
						h4.thin Add Events
						br
					.col-sm-12
						form.form(name='eventForm', ng-submit='share()')
							.input-field
								input#eventName(type="text", ng-model="event.name", required)
								label(for="eventName") Name
							.input-field
								input#eventDate.datepicker(type="text", ng-model="event.date", required)
								label(for="eventDate") Date
							.input-field
								input#eventLocation(type="text", ng-model="event.location", required)
								label(for="eventLocation") Location
							div
								button.btn.btn-inverse.btn-lg.btn-login(type='submit')
									| Share Event
		#officers.section.scrollspy
			ul.collection.with-header(style="overflow: visible")
				li.collection-item
					.col-sm-12
						h4.thin Add Officers
						br
					.col-sm-12
						form.form(name='officerForm', ng-submit='addOfficer(officerForm)')
							.input-field
								input#full_name(type="text", ng-model="officer.name", required)
								label(for="full_name") Full Name
							.input-field
								textarea#bio.materialize-textarea(ng-model="officer.bio")
								label(for="bio") Biography / Personal Statement
							.input-field
								input#profilePicture(type="url", ng-model="officer.image")
								label(for="profilePicture") Picture URL
							.input-field
								select#officerRole(name="position", ng-model="officer.position")
									option(value="president") President
									option(value="vice-president") Vice President
									option(value="treasurer") Treasurer
									option(value="secretary-recording") Recording Secretary
									option(value="secretary-financial") Financial Secretary
									option(value="warden") Warden
									option(value="conductor") Conductor
								label(for="officerRole") Role
							br
							div
								button.btn.btn-inverse.btn-lg.btn-login(type='submit')
									| Change Officer
					li.collection-header
						h4.thin Delegates
					li.collection-item(ng-repeat='person in delegates')
						strong {{person.name}}
						a.trash(ng-click='deleteDelegate(person)')
							i.material-icons.pull-right delete
					li.collection-header
						h4.thin Trustees
					li.collection-item(ng-repeat='person in trustees')
						strong {{person.name}}
						a.trash(ng-click='deleteTrustee(person)')
							i.material-icons.pull-right delete
					li.collection-item
						.col-sm-12
							h4.thin Add Additional Officers
							br
						.row
							.col.m6.s12
								form.form(name='DelegatesForm', ng-submit='addDelegate()')
									.input-field
										input#delegateName(type="text", ng-model="delegate.name", required)
										label(for="delegateName") Full Name
									br
									div
										button.btn.btn-inverse.btn-lg.btn-login(type='submit')
											| Add Delegate
							.col.m6.s12
								form.form(name='trusteesForm', ng-submit='addTrustee()')
									.input-field
										input#trusteeName(type="text", ng-model="trustee.name", required)
										label(for="trusteeName") Full Name
									br
									div
										button.btn.btn-inverse.btn-lg.btn-login(type='submit')
											| Add Trustee
		#documents.section.scrollspy
			ul.collection.with-header
				li.collection-item
					.col-sm-12
						h4.thin Upload Document
				li.collection-item
					form(name='documentUpload', ng-submit='uploadDocument()')
						.file-field.input-field
							.btn
								span File
								input(type="file", file-model="document.file")
							.file-path-wrapper
								input(type="text", value="{{document.file.name}}") 
						p
							input.with-gap(ng-model='document.type', type='radio', id='avalJobs', value="true", checked)
							label(for='avalJobs') Avaliable Jobs
						p
							input.with-gap(ng-model='document.type', type='radio', id='classes', value="false")
							label(for='classes') Classes
						br
						div
							button.btn.btn-inverse.btn-lg.btn-login(type='submit')
								| Upload Document

		#boycotts.section.scrollspy
			ul.collection.with-header
				li.collection-header
						h4.thin Active Boycotts:
					li.collection-item(ng-repeat='boycott in boycotts')
						strong.green-text(ng-show="!boycott.boycott") {{boycott.name}}
						strong.yellow-text(ng-show="boycott.boycott") {{boycott.name}}
						a.trash(ng-click='deleteBoycott(boycott)')
							i.material-icons.pull-right delete
					li.collection-item
						.col-sm-12
							h4.thin Create a Boycott
							br
						.row
							.col.s12
								form.form(name='boycottForm', ng-submit='addBoycott()')
									.input-field
										input#boycottName(type="text", ng-model="boycott.name", required)
										label(for="boycottName") Business Name
									p
										input.with-gap(ng-model='boycott.boycotted', type='radio', id='shop', value="false", checked)
										label(for='shop') Shop Here
									p
										input.with-gap(ng-model='boycott.boycotted', type='radio', id='noshop', value="true")
										label(for='noshop') Don't Shop Here
									br
									div
										button.btn.btn-inverse.btn-lg.btn-login.danger(type='submit')
											| Add Boycott/Ednorsement
		#users.section.scrollspy
			ul.collection.with-header
				li.collection-header
					h4.thin Users
				li.collection-item(ng-repeat='user in users')
					strong {{user.name}}
					br
					span.text-muted {{user.email}}
					a.trash(ng-click='delete(user)')
						i.material-icons.pull-right delete
				li.collection-item
					.col-sm-12
						h4.thin Add User
					.col-sm-12
						form.form(name='form', ng-submit='register(form)', novalidate='')
							.form-group(ng-class='{ "has-success": form.name.$valid && submitted,\
								"has-error": form.name.$invalid && submitted }')
							label Name
							input.form-control(type='text', name='name', ng-model='user.name', required='')
							p.help-block(ng-show='form.name.$error.required && submitted')
								| A name is required

							p
								input.with-gap(name='privilages', ng-model="user.priv", type='radio', id='userPriv', value="user", checked)
								label(for='userPriv') Normal User
							p
								input.with-gap(name='privilages', ng-model="user.priv", type='radio', id='adminPriv', value="admin")
								label(for='adminPriv') Administrator

							.form-group(ng-class='{ "has-success": form.email.$valid && submitted,\
							"has-error": form.email.$invalid && submitted }')
							label Email
							input.form-control(type='email', name='email', ng-model='user.email', required='', mongoose-error='')
							p.help-block(ng-show='form.email.$error.email && submitted')
								| Doesn't look like a valid email.
							p.help-block(ng-show='form.email.$error.required && submitted')
								| What's your email address?
							p.help-block(ng-show='form.email.$error.mongoose')
								| {{ errors.email }}

							.form-group(ng-class='{ "has-success": form.password.$valid && submitted,\
							"has-error": form.password.$invalid && submitted }')
							label Password
							input.form-control(type='password', name='password', ng-model='user.password', ng-minlength='3', required='', mongoose-error='')
							p.help-block(ng-show='(form.password.$error.minlength || form.password.$error.required) && submitted')
								| Password must be at least 3 characters.
							p.help-block(ng-show='form.password.$error.mongoose')
								| {{ errors.password }}

							div
								button.btn.btn-inverse.btn-lg.btn-login(type='submit')
									| Add User

	.col.hide-on-small-only.m2.l2

		ul.section.table-of-contents
			li
				a(href="#picture", data-i18n='admin.picture')
			li
				a(href="#news", data-i18n='admin.news')
			li
				a(href="#events", data-i18n='admin.events')
			li
				a(href="#officers", data-i18n='admin.officers')
			li
				a(href="#documents", data-i18n='admin.documents')
			li
				a(href="#boycotts", data-i18n='admin.boycotts')
			li
				a(href="#users", data-i18n='admin.users')

div(ng-include='"components/footer/footer.html"')